/*
 * This code and all components Â© 2015 - 2019 Wowza Media Systems, LLC. All rights reserved.
 * This code is licensed pursuant to the BSD 3-Clause License.
 * 
 * Wowza Streaming Cloud REST API Reference Documentation
 *
 * OpenAPI spec version: v1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wowza.cloudsdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value ="com.wowza.cloudsdk.JavaCreate", date = "2019-03-02T10:45:24.077Z")
public class Recording {
  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("download_url")
  private String downloadUrl = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("file_name")
  private String fileName = null;

  @SerializedName("file_size")
  private Long fileSize = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("starts_at")
  private String startsAt = null;

  /**
   * The state of the recording.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UPLOADING("uploading"),
    
    CONVERTING("converting"),
    
    REMOVING("removing"),
    
    COMPLETED("completed"),
    
    FAILED("failed");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("transcoder_id")
  private String transcoderId = null;

  @SerializedName("transcoder_name")
  private String transcoderName = null;

  @SerializedName("transcoding_uptime_id")
  private String transcodingUptimeId = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  public Recording createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time that the recording was created.
   * @return createdAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the recording was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Recording downloadUrl(String downloadUrl) {
    this.downloadUrl = downloadUrl;
    return this;
  }

   /**
   * The URL that can be used to download the recording.
   * @return downloadUrl
  **/
  @ApiModelProperty(example = "", value = "The URL that can be used to download the recording.")
  public String getDownloadUrl() {
    return downloadUrl;
  }

  public void setDownloadUrl(String downloadUrl) {
    this.downloadUrl = downloadUrl;
  }

  public Recording duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * The length of the recording, in hours, minutes, and seconds.
   * @return duration
  **/
  @ApiModelProperty(example = "", value = "The length of the recording, in hours, minutes, and seconds.")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public Recording fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * The file name of the recording.
   * @return fileName
  **/
  @ApiModelProperty(example = "", value = "The file name of the recording.")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public Recording fileSize(Long fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * The file size of the recording.
   * @return fileSize
  **/
  @ApiModelProperty(example = "", value = "The file size of the recording.")
  public Long getFileSize() {
    return fileSize;
  }

  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }

  public Recording id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the recording.
   * @return id
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the recording.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Recording reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * The reason that a recording has the state &lt;strong&gt;failed&lt;/strong&gt;.
   * @return reason
  **/
  @ApiModelProperty(example = "", value = "The reason that a recording has the state <strong>failed</strong>.")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public Recording startsAt(String startsAt) {
    this.startsAt = startsAt;
    return this;
  }

   /**
   * The date and time that the recording started.
   * @return startsAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the recording started.")
  public String getStartsAt() {
    return startsAt;
  }

  public void setStartsAt(String startsAt) {
    this.startsAt = startsAt;
  }

  public Recording state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * The state of the recording.
   * @return state
  **/
  @ApiModelProperty(example = "", value = "The state of the recording.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public Recording transcoderId(String transcoderId) {
    this.transcoderId = transcoderId;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the transcoder that was recorded.
   * @return transcoderId
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the transcoder that was recorded.")
  public String getTranscoderId() {
    return transcoderId;
  }

  public void setTranscoderId(String transcoderId) {
    this.transcoderId = transcoderId;
  }

  public Recording transcoderName(String transcoderName) {
    this.transcoderName = transcoderName;
    return this;
  }

   /**
   * The descriptive name of the transcoder that was recorded.
   * @return transcoderName
  **/
  @ApiModelProperty(example = "", value = "The descriptive name of the transcoder that was recorded.")
  public String getTranscoderName() {
    return transcoderName;
  }

  public void setTranscoderName(String transcoderName) {
    this.transcoderName = transcoderName;
  }

  public Recording transcodingUptimeId(String transcodingUptimeId) {
    this.transcodingUptimeId = transcodingUptimeId;
    return this;
  }

   /**
   * The unique identifier associated with the transcoding uptime for this recording.
   * @return transcodingUptimeId
  **/
  @ApiModelProperty(example = "", value = "The unique identifier associated with the transcoding uptime for this recording.")
  public String getTranscodingUptimeId() {
    return transcodingUptimeId;
  }

  public void setTranscodingUptimeId(String transcodingUptimeId) {
    this.transcodingUptimeId = transcodingUptimeId;
  }

  public Recording updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time that the recording was updated.
   * @return updatedAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the recording was updated.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Recording recording = (Recording) o;
    return Objects.equals(this.createdAt, recording.createdAt) &&
        Objects.equals(this.downloadUrl, recording.downloadUrl) &&
        Objects.equals(this.duration, recording.duration) &&
        Objects.equals(this.fileName, recording.fileName) &&
        Objects.equals(this.fileSize, recording.fileSize) &&
        Objects.equals(this.id, recording.id) &&
        Objects.equals(this.reason, recording.reason) &&
        Objects.equals(this.startsAt, recording.startsAt) &&
        Objects.equals(this.state, recording.state) &&
        Objects.equals(this.transcoderId, recording.transcoderId) &&
        Objects.equals(this.transcoderName, recording.transcoderName) &&
        Objects.equals(this.transcodingUptimeId, recording.transcodingUptimeId) &&
        Objects.equals(this.updatedAt, recording.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, downloadUrl, duration, fileName, fileSize, id, reason, startsAt, state, transcoderId, transcoderName, transcodingUptimeId, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Recording {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    downloadUrl: ").append(toIndentedString(downloadUrl)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    startsAt: ").append(toIndentedString(startsAt)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    transcoderId: ").append(toIndentedString(transcoderId)).append("\n");
    sb.append("    transcoderName: ").append(toIndentedString(transcoderName)).append("\n");
    sb.append("    transcodingUptimeId: ").append(toIndentedString(transcodingUptimeId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

