/*
 * This code and all components Â© 2015 - 2019 Wowza Media Systems, LLC. All rights reserved.
 * This code is licensed pursuant to the BSD 3-Clause License.
 * 
 * Wowza Streaming Cloud REST API Reference Documentation
 *
 * OpenAPI spec version: v1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wowza.cloudsdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 
 */
@ApiModel(description = "")
public class UsageTimeTranscoder {
  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("seconds_billed")
  private Integer secondsBilled = null;

  @SerializedName("seconds_used")
  private Integer secondsUsed = null;

  public UsageTimeTranscoder deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * A value of &lt;strong&gt;true&lt;/strong&gt; indicates that the live stream or transcoder has been removed from Wowza Streaming Cloud.
   * @return deleted
  **/
  @ApiModelProperty(value = "A value of <strong>true</strong> indicates that the live stream or transcoder has been removed from Wowza Streaming Cloud.")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public UsageTimeTranscoder id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the live stream or transcoder.
   * @return id
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the live stream or transcoder.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UsageTimeTranscoder name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A descriptive name for the live stream or transcoder.
   * @return name
  **/
  @ApiModelProperty(example = "", value = "A descriptive name for the live stream or transcoder.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UsageTimeTranscoder secondsBilled(Integer secondsBilled) {
    this.secondsBilled = secondsBilled;
    return this;
  }

   /**
   * The amount of stream processing time, in seconds, that was billed for the live stream or transcoder.
   * @return secondsBilled
  **/
  @ApiModelProperty(example = "", value = "The amount of stream processing time, in seconds, that was billed for the live stream or transcoder.")
  public Integer getSecondsBilled() {
    return secondsBilled;
  }

  public void setSecondsBilled(Integer secondsBilled) {
    this.secondsBilled = secondsBilled;
  }

  public UsageTimeTranscoder secondsUsed(Integer secondsUsed) {
    this.secondsUsed = secondsUsed;
    return this;
  }

   /**
   * The amount of time, in seconds, that it took for the live stream or transcoder to be processed.
   * @return secondsUsed
  **/
  @ApiModelProperty(example = "", value = "The amount of time, in seconds, that it took for the live stream or transcoder to be processed.")
  public Integer getSecondsUsed() {
    return secondsUsed;
  }

  public void setSecondsUsed(Integer secondsUsed) {
    this.secondsUsed = secondsUsed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageTimeTranscoder usageTimeTranscoder = (UsageTimeTranscoder) o;
    return Objects.equals(this.deleted, usageTimeTranscoder.deleted) &&
        Objects.equals(this.id, usageTimeTranscoder.id) &&
        Objects.equals(this.name, usageTimeTranscoder.name) &&
        Objects.equals(this.secondsBilled, usageTimeTranscoder.secondsBilled) &&
        Objects.equals(this.secondsUsed, usageTimeTranscoder.secondsUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleted, id, name, secondsBilled, secondsUsed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageTimeTranscoder {\n");
    
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    secondsBilled: ").append(toIndentedString(secondsBilled)).append("\n");
    sb.append("    secondsUsed: ").append(toIndentedString(secondsUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

