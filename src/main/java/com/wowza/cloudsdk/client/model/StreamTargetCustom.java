/*
 * This code and all components Â© 2015 - 2019 Wowza Media Systems, LLC. All rights reserved.
 * This code is licensed pursuant to the BSD 3-Clause License.
 * 
 * Wowza Streaming Cloud REST API Reference Documentation
 *
 * OpenAPI spec version: v1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wowza.cloudsdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")
public class StreamTargetCustom {
  @SerializedName("backup_url")
  private String backupUrl = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("hds_playback_url")
  private String hdsPlaybackUrl = null;

  @SerializedName("hls_playback_url")
  private String hlsPlaybackUrl = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("primary_url")
  private String primaryUrl = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("rtmp_playback_url")
  private String rtmpPlaybackUrl = null;

  @SerializedName("stream_name")
  private String streamName = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("username")
  private String username = null;

  public StreamTargetCustom backupUrl(String backupUrl) {
    this.backupUrl = backupUrl;
    return this;
  }

   /**
   * Only for custom stream targets whose &lt;em&gt;provider&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; **akamai_cupertino**. The backup ingest URL for a custom stream target.
   * @return backupUrl
  **/
  @ApiModelProperty(example = "", value = "Only for custom stream targets whose <em>provider</em> is <em>not</em> **akamai_cupertino**. The backup ingest URL for a custom stream target.")
  public String getBackupUrl() {
    return backupUrl;
  }

  public void setBackupUrl(String backupUrl) {
    this.backupUrl = backupUrl;
  }

  public StreamTargetCustom createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time that the custom stream target was created.
   * @return createdAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the custom stream target was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public StreamTargetCustom hdsPlaybackUrl(String hdsPlaybackUrl) {
    this.hdsPlaybackUrl = hdsPlaybackUrl;
    return this;
  }

   /**
   * Only for custom stream targets whose &lt;em&gt;provider&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; &lt;strong&gt;akamai_cupertino&lt;/strong&gt;. The web address that the custom stream target uses to play Adobe HDS streams.
   * @return hdsPlaybackUrl
  **/
  @ApiModelProperty(example = "", value = "Only for custom stream targets whose <em>provider</em> is <em>not</em> <strong>akamai_cupertino</strong>. The web address that the custom stream target uses to play Adobe HDS streams.")
  public String getHdsPlaybackUrl() {
    return hdsPlaybackUrl;
  }

  public void setHdsPlaybackUrl(String hdsPlaybackUrl) {
    this.hdsPlaybackUrl = hdsPlaybackUrl;
  }

  public StreamTargetCustom hlsPlaybackUrl(String hlsPlaybackUrl) {
    this.hlsPlaybackUrl = hlsPlaybackUrl;
    return this;
  }

   /**
   * The web address that the custom stream target uses to play Apple HLS streams.
   * @return hlsPlaybackUrl
  **/
  @ApiModelProperty(example = "", value = "The web address that the custom stream target uses to play Apple HLS streams.")
  public String getHlsPlaybackUrl() {
    return hlsPlaybackUrl;
  }

  public void setHlsPlaybackUrl(String hlsPlaybackUrl) {
    this.hlsPlaybackUrl = hlsPlaybackUrl;
  }

  public StreamTargetCustom id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the custom stream target.
   * @return id
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the custom stream target.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public StreamTargetCustom name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A descriptive name for the custom stream target. Maximum 255 characters.
   * @return name
  **/
  @ApiModelProperty(example = "", value = "A descriptive name for the custom stream target. Maximum 255 characters.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StreamTargetCustom password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Only for custom stream targets whose &lt;em&gt;provider&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; **akamai_cupertino**. A &lt;em&gt;username&lt;/em&gt; must also be present. The password associated with the target username for RTMP authentication.
   * @return password
  **/
  @ApiModelProperty(example = "", value = "Only for custom stream targets whose <em>provider</em> is <em>not</em> **akamai_cupertino**. A <em>username</em> must also be present. The password associated with the target username for RTMP authentication.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public StreamTargetCustom primaryUrl(String primaryUrl) {
    this.primaryUrl = primaryUrl;
    return this;
  }

   /**
   * The primary ingest URL of the custom stream target.
   * @return primaryUrl
  **/
  @ApiModelProperty(example = "", value = "The primary ingest URL of the custom stream target.")
  public String getPrimaryUrl() {
    return primaryUrl;
  }

  public void setPrimaryUrl(String primaryUrl) {
    this.primaryUrl = primaryUrl;
  }

  public StreamTargetCustom provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * The CDN for the target. Values can be appended with **_mock** to use in the sandbox environment.
   * @return provider
  **/
  @ApiModelProperty(example = "", value = "The CDN for the target. Values can be appended with **_mock** to use in the sandbox environment.")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public StreamTargetCustom rtmpPlaybackUrl(String rtmpPlaybackUrl) {
    this.rtmpPlaybackUrl = rtmpPlaybackUrl;
    return this;
  }

   /**
   * The web address that the custom stream target uses to play RTMP streams.
   * @return rtmpPlaybackUrl
  **/
  @ApiModelProperty(example = "", value = "The web address that the custom stream target uses to play RTMP streams.")
  public String getRtmpPlaybackUrl() {
    return rtmpPlaybackUrl;
  }

  public void setRtmpPlaybackUrl(String rtmpPlaybackUrl) {
    this.rtmpPlaybackUrl = rtmpPlaybackUrl;
  }

  public StreamTargetCustom streamName(String streamName) {
    this.streamName = streamName;
    return this;
  }

   /**
   * The name of the stream being ingested into the target.
   * @return streamName
  **/
  @ApiModelProperty(example = "", value = "The name of the stream being ingested into the target.")
  public String getStreamName() {
    return streamName;
  }

  public void setStreamName(String streamName) {
    this.streamName = streamName;
  }

  public StreamTargetCustom updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time that the custom stream target was updated.
   * @return updatedAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the custom stream target was updated.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public StreamTargetCustom username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Only for custom stream targets whose &lt;em&gt;provider&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.
   * @return username
  **/
  @ApiModelProperty(example = "", value = "Only for custom stream targets whose <em>provider</em> is <em>not</em> **akamai_cupertino**. The username or ID that the target uses for RTMP authentication.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamTargetCustom streamTargetCustom = (StreamTargetCustom) o;
    return Objects.equals(this.backupUrl, streamTargetCustom.backupUrl) &&
        Objects.equals(this.createdAt, streamTargetCustom.createdAt) &&
        Objects.equals(this.hdsPlaybackUrl, streamTargetCustom.hdsPlaybackUrl) &&
        Objects.equals(this.hlsPlaybackUrl, streamTargetCustom.hlsPlaybackUrl) &&
        Objects.equals(this.id, streamTargetCustom.id) &&
        Objects.equals(this.name, streamTargetCustom.name) &&
        Objects.equals(this.password, streamTargetCustom.password) &&
        Objects.equals(this.primaryUrl, streamTargetCustom.primaryUrl) &&
        Objects.equals(this.provider, streamTargetCustom.provider) &&
        Objects.equals(this.rtmpPlaybackUrl, streamTargetCustom.rtmpPlaybackUrl) &&
        Objects.equals(this.streamName, streamTargetCustom.streamName) &&
        Objects.equals(this.updatedAt, streamTargetCustom.updatedAt) &&
        Objects.equals(this.username, streamTargetCustom.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupUrl, createdAt, hdsPlaybackUrl, hlsPlaybackUrl, id, name, password, primaryUrl, provider, rtmpPlaybackUrl, streamName, updatedAt, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamTargetCustom {\n");
    
    sb.append("    backupUrl: ").append(toIndentedString(backupUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    hdsPlaybackUrl: ").append(toIndentedString(hdsPlaybackUrl)).append("\n");
    sb.append("    hlsPlaybackUrl: ").append(toIndentedString(hlsPlaybackUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    primaryUrl: ").append(toIndentedString(primaryUrl)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    rtmpPlaybackUrl: ").append(toIndentedString(rtmpPlaybackUrl)).append("\n");
    sb.append("    streamName: ").append(toIndentedString(streamName)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

