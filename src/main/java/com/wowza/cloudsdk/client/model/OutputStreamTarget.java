/*
 * This code and all components Â© 2015 - 2019 Wowza Media Systems, LLC. All rights reserved.
 * This code is licensed pursuant to the BSD 3-Clause License.
 * 
 * Wowza Streaming Cloud REST API Reference Documentation
 *
 * OpenAPI spec version: v1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wowza.cloudsdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.wowza.cloudsdk.client.model.StreamTarget;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")
public class OutputStreamTarget {
  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("output_id")
  private String outputId = null;

  @SerializedName("stream_target")
  private StreamTarget streamTarget = null;

  @SerializedName("stream_target_id")
  private String streamTargetId = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("use_stream_target_backup_url")
  private Boolean useStreamTargetBackupUrl = null;

  public OutputStreamTarget createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time that the output stream target was created.
   * @return createdAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the output stream target was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public OutputStreamTarget id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the output stream target.
   * @return id
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the output stream target.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public OutputStreamTarget outputId(String outputId) {
    this.outputId = outputId;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the output rendition.
   * @return outputId
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the output rendition.")
  public String getOutputId() {
    return outputId;
  }

  public void setOutputId(String outputId) {
    this.outputId = outputId;
  }

  public OutputStreamTarget streamTarget(StreamTarget streamTarget) {
    this.streamTarget = streamTarget;
    return this;
  }

   /**
   * Get streamTarget
   * @return streamTarget
  **/
  @ApiModelProperty(value = "")
  public StreamTarget getStreamTarget() {
    return streamTarget;
  }

  public void setStreamTarget(StreamTarget streamTarget) {
    this.streamTarget = streamTarget;
  }

  public OutputStreamTarget streamTargetId(String streamTargetId) {
    this.streamTargetId = streamTargetId;
    return this;
  }

   /**
   * The unique alphanumeric string that identifies the stream target.
   * @return streamTargetId
  **/
  @ApiModelProperty(example = "", value = "The unique alphanumeric string that identifies the stream target.")
  public String getStreamTargetId() {
    return streamTargetId;
  }

  public void setStreamTargetId(String streamTargetId) {
    this.streamTargetId = streamTargetId;
  }

  public OutputStreamTarget updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time that the output stream target was updated.
   * @return updatedAt
  **/
  @ApiModelProperty(example = "", value = "The date and time that the output stream target was updated.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public OutputStreamTarget useStreamTargetBackupUrl(Boolean useStreamTargetBackupUrl) {
    this.useStreamTargetBackupUrl = useStreamTargetBackupUrl;
    return this;
  }

   /**
   * Specifies whether to use the stream target&#39;s primary or backup URL.
   * @return useStreamTargetBackupUrl
  **/
  @ApiModelProperty(value = "Specifies whether to use the stream target's primary or backup URL.")
  public Boolean isUseStreamTargetBackupUrl() {
    return useStreamTargetBackupUrl;
  }

  public void setUseStreamTargetBackupUrl(Boolean useStreamTargetBackupUrl) {
    this.useStreamTargetBackupUrl = useStreamTargetBackupUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputStreamTarget outputStreamTarget = (OutputStreamTarget) o;
    return Objects.equals(this.createdAt, outputStreamTarget.createdAt) &&
        Objects.equals(this.id, outputStreamTarget.id) &&
        Objects.equals(this.outputId, outputStreamTarget.outputId) &&
        Objects.equals(this.streamTarget, outputStreamTarget.streamTarget) &&
        Objects.equals(this.streamTargetId, outputStreamTarget.streamTargetId) &&
        Objects.equals(this.updatedAt, outputStreamTarget.updatedAt) &&
        Objects.equals(this.useStreamTargetBackupUrl, outputStreamTarget.useStreamTargetBackupUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, id, outputId, streamTarget, streamTargetId, updatedAt, useStreamTargetBackupUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputStreamTarget {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    outputId: ").append(toIndentedString(outputId)).append("\n");
    sb.append("    streamTarget: ").append(toIndentedString(streamTarget)).append("\n");
    sb.append("    streamTargetId: ").append(toIndentedString(streamTargetId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    useStreamTargetBackupUrl: ").append(toIndentedString(useStreamTargetBackupUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

